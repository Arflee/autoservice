stages:
  - install          # List of stages for jobs, and their order of execution
  - test
  - code-scan
  - build
  - deploy
  
image: node

cache:
  paths:
    - node_modules/
    - public/

install:
  stage: install
  script:
    - echo "Installing node modules..."
    - npm i
    - echo "Installing complete!"

postgres:
  stage: install
  services:
    - postgres:latest
  variables:
    POSTGRES_DB: autoservice
    POSTGRES_USER: username
    POSTGRES_PASSWORD: password
  image: postgres:latest
  script:
    - export PGPASSWORD=$POSTGRES_PASSWORD
    - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT 'OK' AS status;"

test:
  stage: test
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  needs: ["install"]
  script:
    - npm run test

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  needs:
    - ["install"]
  script:
    - echo "Compiling the code..."
    - npm run build
    - echo "Compile complete."

pages:
  stage: deploy
  artifacts:
    paths:
      - ./docs
    when: always
  script:
    - npm run docs
    - echo "Documentation generated."

    
sonarqube-check:
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  stage: code-scan
  needs: ["test"]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  allow_failure: true
  only:
    - main